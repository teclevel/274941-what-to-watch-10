{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import{ALL_GENRES,FILMS_PER_PAGE,NameSpace}from'../../const';import{getListFiltered}from'../../utils';import{fetchLoadFilmAction,fetchLoadFilmsAction}from'../api-actions';var initialState={rawFilms:[],isFilmsLoaded:true,isFilmsLoadingError:false,films:[],isFilmNotFound:false,filteredFilms:[],renderedFilmsCount:FILMS_PER_PAGE,filter:{genre:ALL_GENRES}};export var filmScreening=createSlice({name:NameSpace.FilmScreening,initialState:initialState,reducers:{resetFilms:function resetFilms(state){state.filteredFilms=getListFiltered(state.rawFilms,state.filter.genre);},cutFilteredFilms:function cutFilteredFilms(state){state.films=getListFiltered(state.rawFilms,state.filter.genre).slice(0,state.renderedFilmsCount);},loadMoreFilms:function loadMoreFilms(state){state.films=state.films.slice(0,state.renderedFilmsCount+FILMS_PER_PAGE);state.renderedFilmsCount+=FILMS_PER_PAGE;},resetFilter:function resetFilter(state){state.filter.genre=ALL_GENRES;state.renderedFilmsCount=FILMS_PER_PAGE;},changeGenre:function changeGenre(state,action){state.filter.genre=action.payload;},filterByGenre:function filterByGenre(state){state.filteredFilms=getListFiltered(state.rawFilms,state.filter.genre);},resetFilmFoundState:function resetFilmFoundState(state){state.isFilmNotFound=false;}},extraReducers:function extraReducers(builder){builder.addCase(fetchLoadFilmAction.rejected,function(state){state.isFilmNotFound=true;}).addCase(fetchLoadFilmsAction.pending,function(state){state.isFilmsLoaded=false;}).addCase(fetchLoadFilmsAction.fulfilled,function(state,action){state.rawFilms=action.payload;state.isFilmsLoaded=true;}).addCase(fetchLoadFilmsAction.rejected,function(state){state.isFilmsLoadingError=true;});}});var _filmScreening$action=filmScreening.actions,resetFilmFoundState=_filmScreening$action.resetFilmFoundState,changeGenre=_filmScreening$action.changeGenre,cutFilteredFilms=_filmScreening$action.cutFilteredFilms,filterByGenre=_filmScreening$action.filterByGenre,loadMoreFilms=_filmScreening$action.loadMoreFilms,resetFilms=_filmScreening$action.resetFilms,resetFilter=_filmScreening$action.resetFilter;export{resetFilmFoundState,changeGenre,cutFilteredFilms,filterByGenre,loadMoreFilms,resetFilms,resetFilter};","map":{"version":3,"names":["createSlice","ALL_GENRES","FILMS_PER_PAGE","NameSpace","getListFiltered","fetchLoadFilmAction","fetchLoadFilmsAction","initialState","rawFilms","isFilmsLoaded","isFilmsLoadingError","films","isFilmNotFound","filteredFilms","renderedFilmsCount","filter","genre","filmScreening","name","FilmScreening","reducers","resetFilms","state","cutFilteredFilms","slice","loadMoreFilms","resetFilter","changeGenre","action","payload","filterByGenre","resetFilmFoundState","extraReducers","builder","addCase","rejected","pending","fulfilled","actions"],"sources":["D:/frontend/Курсы фронтенд/274941-what-to-watch-10/project/src/store/film-screening/film-screening.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { ALL_GENRES, FILMS_PER_PAGE, NameSpace } from '../../const';\nimport { FilmScreening } from '../../types/state';\nimport { getListFiltered } from '../../utils';\nimport { fetchLoadFilmAction, fetchLoadFilmsAction } from '../api-actions';\n\nconst initialState: FilmScreening = {\n  rawFilms: [],\n  isFilmsLoaded: true,\n  isFilmsLoadingError: false,\n  films: [],\n  isFilmNotFound: false,\n  filteredFilms: [],\n  renderedFilmsCount: FILMS_PER_PAGE,\n  filter: {\n    genre: ALL_GENRES,\n  },\n};\n\nexport const filmScreening = createSlice({\n  name: NameSpace.FilmScreening,\n  initialState,\n  reducers: {\n    resetFilms: (state) => {\n      state.filteredFilms = getListFiltered(state.rawFilms, state.filter.genre);\n    },\n    cutFilteredFilms: (state) => {\n      state.films = getListFiltered(state.rawFilms, state.filter.genre).slice(0, state.renderedFilmsCount);\n    },\n    loadMoreFilms: (state) => {\n      state.films = state.films.slice(0, state.renderedFilmsCount + FILMS_PER_PAGE);\n      state.renderedFilmsCount += FILMS_PER_PAGE;\n    },\n    resetFilter: (state) => {\n      state.filter.genre = ALL_GENRES;\n      state.renderedFilmsCount = FILMS_PER_PAGE;\n    },\n    changeGenre: (state, action) => {\n      state.filter.genre = action.payload;\n    },\n    filterByGenre: (state) => {\n      state.filteredFilms = getListFiltered(state.rawFilms, state.filter.genre);\n    },\n    resetFilmFoundState: (state) => {\n      state.isFilmNotFound = false;\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchLoadFilmAction.rejected, (state) => {\n        state.isFilmNotFound = true;\n      })\n      .addCase(fetchLoadFilmsAction.pending, (state) => {\n        state.isFilmsLoaded = false;\n      })\n      .addCase(fetchLoadFilmsAction.fulfilled, (state, action) => {\n        state.rawFilms = action.payload;\n        state.isFilmsLoaded = true;\n      })\n      .addCase(fetchLoadFilmsAction.rejected, (state) => {\n        state.isFilmsLoadingError = true;\n      });\n  }\n});\n\nexport const { resetFilmFoundState, changeGenre, cutFilteredFilms, filterByGenre, loadMoreFilms, resetFilms, resetFilter } = filmScreening.actions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}